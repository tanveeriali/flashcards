{"version":3,"sources":["setupFirebase.js","Top.js","SetList.js","Home.js","SignIn.js","Title.js","Description.js","IndividualCard.js","CardsetEdit.js","CardsetAnswer.js","Category.js","NewCardSet.js","NoMatch.js","App.js","serviceWorker.js","index.js"],"names":["firebase","initializeApp","apiKey","process","authDomain","projectId","Top","props","state","cardSetsDefault","isSignedIn","this","unsubscribe","Action","action","to","user","entryId","id","className","icon","faBrain","size","color","title","React","Component","SetList","cards","editable","Tiles","length","map","set","index","Col","data","category","md","xs","lg","key","xl","Card","Body","replace","description","db","firestore","Home","yourCards","unregisterAuthObserver","auth","onAuthStateChanged","collection","get","then","cardsets","setState","docs","uid","currentUser","doc","Helmet","charSet","Container","fluid","Row","SignIn","uiConfig","signInFlow","signInOptions","EmailAuthProvider","PROVIDER_ID","GoogleAuthProvider","callbacks","signInSuccessWithAuthResult","setTimeout","history","push","firebaseAuth","Title","titleRef","createRef","updateTitle","text","defaultValue","ref","minLength","maxLength","placeholder","onClick","current","value","buttonText","alert","Description","descRef","updateDesc","descriptionVal","descAlert","IndividualCard","sideA","sideB","updateSideA","updateSideB","deleteCard","card","class","CardsetEdit","currentCards","match","params","urlString","disabled","n","name","update","orderBy","onSnapshot","snapshot","val","changer","delete","add","answered","correct","created","Date","List","bind","addCard","CardsetAnswer","shuffled","currentSide","cardsAnswered","cardsCorrect","complete","flips","endButton","holder","location","pathname","indexOf","shuffle","exists","shuffledCards","a","sort","Math","random","b","x","i","ans","endStudy","CardSide","flip","parseFloat","toFixed","nextCard","Category","onChange","dropdownChanged","NewCardSet","e","target","toLowerCase","entryString","checkExists","string","createSet","App","exact","path","component","NoMatch","Boolean","window","hostname","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.08a7021e.chunk.js","sourcesContent":["import firebase from 'firebase';\n// Required for side-effects\nimport 'firebase/firestore';\n\nfirebase.initializeApp({\n    apiKey: process.env.REACT_APP_FIREBASE_API_KEY,\n    authDomain: process.env.REACT_APP_FIREBASE_AUTH_DOMAIN,\n    projectId: process.env.REACT_APP_FIREBASE_PROJECT_ID\n});\n","import React from \"react\";\nimport { faBrain } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { HashRouter as Router, Route, Link } from \"react-router-dom\";\n\nexport default class Top extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      cardSetsDefault: [],\n      isSignedIn: false,\n    };\n  }\n\n  componentWillUnmount() {\n    if (this.unsubscribe) {\n      this.unsubscribe();\n    }\n  }\n\n  render() {\n    const Action = () => {\n      if (this.props.action === \"create\") {\n        return <Link to={`/flashcards/new`}>Create a set +</Link>;\n      }\n      if (this.props.action === \"cancel\") {\n        return <Link to={`/flashcards/home`}>Main Menu </Link>;\n      }\n      if (this.props.user === true && this.props.action === \"start\") {\n        return (\n          <Link to={`/flashcards/set/yours/${this.props.entryId}/`}>\n            Test these cards\n          </Link>\n        );\n      }\n    };\n\n    return (\n      <div id=\"top\">\n        <div className=\"return\">\n          <Link to={`/flashcards/home`}>\n            <FontAwesomeIcon icon={faBrain} size=\"lg\" color=\"#ffffff\" />\n          </Link>\n        </div>\n        <div>{this.props.title}</div>\n        <div className=\"action\">\n          <Action />\n        </div>\n      </div>\n    );\n  }\n}\n","import React from \"react\";\nimport { Card, Col } from \"react-bootstrap\";\nimport { HashRouter as Router, Route, Link } from \"react-router-dom\";\n\nexport default class SetList extends React.Component {\n  render() {\n    const cards = this.props.cards;\n    const editable = this.props.editable;\n    const Tiles = () => {\n      if (cards.length > 0) {\n        return cards.map((set, index) => (\n          <Col\n            className={`h-100 ${set.data().category}`}\n            md={6}\n            xs={12}\n            lg={4}\n            key={index}\n            xl={3}\n          >\n            <Card>\n              <Card.Body>\n                <h4>{set.data().category.replace(\"-\", \" \")}</h4>\n                <h2>{set.data().title}</h2>\n                <p>{set.data().description}</p>\n                <p className=\"source\">\n                  {this.props.editable\n                    ? \"Created by you\"\n                    : \"Created by BrainKwik\"}\n                </p>\n                <div className=\"buttons\">\n                  <Link\n                    to={\n                      editable === false\n                        ? `/flashcards/set/${set.id}`\n                        : `/flashcards/set/yours/${set.id}`\n                    }\n                  >\n                    <div className=\"button\">Test Yourself</div>\n                  </Link>\n                  {this.props.editable === true ? (\n                    <Link to={`/flashcards/set/yours/${set.id}/edit`}>\n                      <div className=\"button\">Edit this set</div>\n                    </Link>\n                  ) : (\n                    <></>\n                  )}\n                </div>\n              </Card.Body>\n            </Card>\n          </Col>\n        ));\n      } else {\n        return <></>;\n      }\n    };\n\n    return <Tiles />;\n  }\n}\n","import React from \"react\";\nimport firebase from \"firebase\";\nimport Top from \"./Top\";\nimport SetList from \"./SetList\";\nimport { Card, Col, Row, Container } from \"react-bootstrap\";\nimport { Helmet } from \"react-helmet\";\n\nimport { HashRouter as Router, Route, Link } from \"react-router-dom\";\n\nconst db = firebase.firestore();\n\nexport default class Home extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      cardSetsDefault: [],\n      isSignedIn: false,\n      yourCards: [],\n    };\n  }\n  componentDidMount() {\n    this.unregisterAuthObserver = firebase.auth().onAuthStateChanged((user) => {\n      db.collection(\"defaultcards\")\n        .get()\n        .then((cardsets) => {\n          this.setState({\n            cardSetsDefault: cardsets.docs,\n          });\n        });\n      this.setState({ isSignedIn: !!user }, () => {\n        const uid = firebase.auth().currentUser.uid;\n        db.collection(\"users\")\n          .doc(uid)\n          .collection(\"yourCards\")\n          .get()\n          .then((cardsets) => {\n            this.setState({\n              yourCards: cardsets.docs,\n            });\n          });\n      });\n    });\n  }\n\n  render() {\n    const cardSetsDefault = this.state.cardSetsDefault;\n    const yourCards = this.state.yourCards;\n\n    const { isSignedIn } = this.state;\n    return (\n      <>\n        <Helmet>\n          <meta charSet=\"utf-8\" />\n          <title>Welcome to BrainKwik</title>\n        </Helmet>\n        <Top title={\"BrainKwik\"} action={\"create\"} />\n        <Container fluid>\n          <div className=\"content\">\n            <h1>Create a set or test yourself</h1>\n            <Row>\n              {isSignedIn && (\n                <Col className=\"new h-100\" md={12} xs={12} lg={4} xl={6}>\n                  <Link to={`/flashcards/new`}>\n                    <Card>\n                      <Card.Body>\n                        <h2>Create a new cardset</h2>\n                        <p>Learn in a flash</p>\n                        <div className=\"addSet\">+</div>\n                      </Card.Body>\n                    </Card>\n                  </Link>\n                </Col>\n              )}\n              {isSignedIn && (\n                <SetList cards={cardSetsDefault} editable={false} />\n              )}\n              {isSignedIn && <SetList cards={yourCards} editable={true} />}\n            </Row>\n          </div>\n        </Container>\n      </>\n    );\n  }\n}\n","import React from \"react\";\nimport StyledFirebaseAuth from \"react-firebaseui/StyledFirebaseAuth\";\nimport firebase from \"firebase\";\nimport { Col, Row, Container } from \"react-bootstrap\";\nimport { faBrain } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { Helmet } from \"react-helmet\";\n\n// Configure FirebaseUI.\n\nclass SignIn extends React.Component {\n  uiConfig = {\n    signInFlow: \"popup\",\n    signInOptions: [\n      firebase.auth.EmailAuthProvider.PROVIDER_ID,\n      firebase.auth.GoogleAuthProvider.PROVIDER_ID,\n    ],\n    callbacks: {\n      signInSuccessWithAuthResult: () => {\n        setTimeout(this.props.history.push(\"/flashcards/home\"), 400);\n      },\n    },\n  };\n\n  render() {\n    if (!this.props.isSignedIn) {\n      return (\n        <Container fluid className=\"login\">\n          <div id=\"welcome\">\n            <Helmet>\n              <meta charSet=\"utf-8\" />\n              <title>Welcome to BrainKwik</title>\n            </Helmet>\n            <FontAwesomeIcon icon={faBrain} size=\"lg\" />\n            <h2>Welcome to BrainKwik</h2>\n\n            <h3>Learn, memorize and impress people in a flash</h3>\n            <FontAwesomeIcon icon={faBrain} size=\"lg\" />\n          </div>\n          <div id=\"login\">\n            <Row className={`justify-content-center`}>\n              <Col className={`h-100`} md={6} xs={12} lg={6} xl={6}>\n                <h4>Please sign-in</h4>\n              </Col>\n            </Row>\n            <Row className={`justify-content-center`}>\n              <Col className={`h-100`} md={6} xs={12} lg={6} xl={6}>\n                <StyledFirebaseAuth\n                  uiConfig={this.uiConfig}\n                  firebaseAuth={firebase.auth()}\n                />\n              </Col>\n            </Row>\n          </div>\n        </Container>\n      );\n    } else {\n      return <></>;\n    }\n  }\n}\n\nexport default SignIn;\n","import React from \"react\";\nimport { Col, Row } from \"react-bootstrap\";\n\nexport default class Title extends React.Component {\n  constructor(props) {\n    super(props);\n    this.titleRef = React.createRef();\n  }\n\n  render() {\n    const updateTitle = this.props.updateTitle;\n    return (\n      <div className=\"title\">\n        <Row className=\"justify-content-center\">\n          <Col xs={10}>\n            <input\n              text=\"true\"\n              defaultValue={this.props.title}\n              ref={this.titleRef}\n              minLength=\"4\"\n              id=\"titleInput\"\n              maxLength=\"50\"\n              placeholder={\n                this.props.title === null ? \"Give your card set a title.\" : null\n              }\n            ></input>\n\n            <button\n              onClick={() => {\n                updateTitle(this.titleRef.current.value);\n              }}\n            >\n              {this.props.buttonText}\n            </button>\n            <div className=\"alert\">{this.props.alert}</div>\n          </Col>\n        </Row>\n      </div>\n    );\n  }\n}\n","import React from \"react\";\nimport { Col, Row } from \"react-bootstrap\";\n\nexport default class Description extends React.Component {\n  constructor(props) {\n    super(props);\n    this.descRef = React.createRef();\n  }\n\n  render() {\n    const updateDesc = this.props.updateDesc;\n    return (\n      <div className=\"description\">\n        <Row className=\"justify-content-center\">\n          <Col xs={10}>\n            {\" \"}\n            <input\n              text=\"true\"\n              id=\"descInput\"\n              ref={this.descRef}\n              defaultValue={this.props.descriptionVal}\n              minLength=\"4\"\n              placeholder={\n                this.props.descriptionVal === null ? \"Describe the set.\" : null\n              }\n            ></input>\n            <button\n              onClick={() => {\n                updateDesc(this.descRef.current.value);\n              }}\n            >\n              Save description\n            </button>\n            <div className=\"alert\">{this.props.descAlert}</div>\n          </Col>\n        </Row>\n      </div>\n    );\n  }\n}\n","import React from \"react\";\nimport { Col, Row, Card } from \"react-bootstrap\";\n\nexport default class IndividualCard extends React.Component {\n  constructor(props) {\n    super(props);\n    this.sideA = React.createRef();\n    this.sideB = React.createRef();\n  }\n\n  render() {\n    const updateSideA = this.props.updateSideA;\n    const updateSideB = this.props.updateSideB;\n    const deleteCard = this.props.deleteCard;\n    const card = this.props.card;\n    const category = this.props.category;\n    return (\n      <div key={card.id} className=\"cardEdit\">\n        <Row className=\"justify-content-center deleteHold\">\n          <Col md={5} xs={10} lg={5} xl={5}>\n            <button\n              class=\"deleteCard\"\n              onClick={() => {\n                deleteCard(card);\n              }}\n            >\n              Delete the card below\n            </button>\n          </Col>\n        </Row>\n        <Row>\n          <Col\n            className={`h-100 sideA ${category}`}\n            md={6}\n            xs={12}\n            lg={6}\n            xl={6}\n          >\n            <Card>\n              <textarea\n                placeholder={\"Type here for side A\"}\n                ref={this.sideA}\n              ></textarea>\n              <button\n                onClick={() => {\n                  updateSideA(this.sideA.current.value, card);\n                }}\n              >\n                Save Side A\n              </button>\n            </Card>\n          </Col>\n          <Col\n            className={`h-100 sideB ${category}`}\n            md={6}\n            xs={12}\n            lg={6}\n            xl={6}\n          >\n            <Card>\n              <textarea\n                placeholder={\"Type here for side B\"}\n                ref={this.sideB}\n              ></textarea>\n              <button\n                onClick={() => {\n                  updateSideB(this.sideB.current.value, card);\n                }}\n              >\n                Save Side B\n              </button>\n            </Card>\n          </Col>\n        </Row>\n      </div>\n    );\n  }\n}\n","import React from \"react\";\nimport firebase from \"firebase\";\nimport Top from \"./Top\";\nimport { Container, Row, Col } from \"react-bootstrap\";\nimport Title from \"./Title\";\nimport Description from \"./Description\";\nimport IndividualCard from \"./IndividualCard\";\nimport { Helmet } from \"react-helmet\";\n\nconst db = firebase.firestore();\n\nexport default class CardsetEdit extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      currentCards: [],\n      entryId: this.props.match.params.urlString,\n      title: \"\",\n      descriptionVal: \"\",\n      category: \"\",\n      set: null,\n      isSignedIn: false,\n      disabled: true,\n      alert: null,\n    };\n  }\n\n  updateTitle(n) {\n    const name = n;\n    const uid = firebase.auth().currentUser.uid;\n    db.collection(\"users\")\n      .doc(uid)\n      .collection(\"yourCards\")\n      .doc(this.state.entryId)\n      .update({\n        title: name,\n      });\n  }\n\n  updateDesc(n) {\n    const name = n;\n    const uid = firebase.auth().currentUser.uid;\n    db.collection(\"users\")\n      .doc(uid)\n      .collection(\"yourCards\")\n      .doc(this.state.entryId)\n      .update({\n        description: name,\n      });\n  }\n\n  componentDidMount() {\n    this.unregisterAuthObserver = firebase.auth().onAuthStateChanged((user) =>\n      this.setState({ isSignedIn: !!user }, () => {\n        const uid = firebase.auth().currentUser.uid;\n\n        this.unsubscribe = db\n          .collection(\"users\")\n          .doc(uid)\n          .collection(\"yourCards\")\n          .doc(this.state.entryId)\n          .collection(\"cards\")\n          .orderBy(\"created\", \"asc\")\n          .onSnapshot((snapshot) => {\n            this.setState({\n              currentCards: snapshot.docs,\n            });\n          });\n\n        db.collection(\"users\")\n          .doc(uid)\n          .collection(\"yourCards\")\n          .doc(this.state.entryId)\n          .get()\n          .then((doc) => {\n            this.setState({\n              title: doc.data().title,\n              descriptionVal: doc.data().description,\n              category: doc.data().category,\n            });\n          });\n      })\n    );\n  }\n\n  componentWillUnmount() {\n    if (this.unsubscribe) {\n      this.unsubscribe();\n    }\n  }\n\n  updateSideA(val, card) {\n    const uid = firebase.auth().currentUser.uid;\n\n    let changer = val;\n    if (changer !== null) {\n      db.collection(\"users\")\n        .doc(uid)\n        .collection(\"yourCards\")\n        .doc(this.state.entryId)\n        .collection(\"cards\")\n        .doc(card.id)\n        .update({\n          sideA: val,\n        });\n    } else if (changer === \"\" || changer === null) {\n      return false;\n    }\n  }\n\n  updateSideB(val, card) {\n    const uid = firebase.auth().currentUser.uid;\n\n    let changer = val;\n    if (changer !== null) {\n      db.collection(\"users\")\n        .doc(uid)\n        .collection(\"yourCards\")\n        .doc(this.state.entryId)\n        .collection(\"cards\")\n        .doc(card.id)\n        .update({\n          sideB: val,\n        });\n    } else if (changer === \"\" || changer === null) {\n      return false;\n    }\n  }\n  deleteCard(card) {\n    const uid = firebase.auth().currentUser.uid;\n    db.collection(\"users\")\n      .doc(uid)\n      .collection(\"yourCards\")\n      .doc(this.state.entryId)\n      .collection(\"cards\")\n      .doc(card.id)\n      .delete();\n  }\n  addCard() {\n    const uid = firebase.auth().currentUser.uid;\n\n    db.collection(\"users\")\n      .doc(uid)\n      .collection(\"yourCards\")\n      .doc(this.state.entryId)\n      .collection(\"cards\")\n      .add({\n        sideA: null,\n        sideB: null,\n        answered: 0,\n        correct: 0,\n        created: new Date(),\n      });\n  }\n  render() {\n    const List = this.state.currentCards.map((card, index) => {\n      return (\n        <IndividualCard\n          card={card}\n          updateSideA={this.updateSideA.bind(this)}\n          updateSideB={this.updateSideB.bind(this)}\n          deleteCard={this.deleteCard.bind(this)}\n          category={this.state.category}\n        />\n      );\n    });\n\n    return (\n      <>\n        <Helmet>\n          <meta charSet=\"utf-8\" />\n          <title>{this.state.title} - Editing a Card Set | BrainKwik</title>\n        </Helmet>\n        <Top\n          user={true}\n          title={\"BrainKwik\"}\n          entryId={this.state.entryId}\n          addCard={this.addCard.bind(this)}\n          action={\"start\"}\n        />\n        <Container fluid className=\"editing\">\n          <div className=\"content\">\n            <Title\n              updateTitle={this.updateTitle.bind(this)}\n              title={this.state.title}\n              alert={this.state.alert}\n              buttonText={\"Save title\"}\n            />\n            <Description\n              updateDesc={this.updateDesc.bind(this)}\n              descriptionVal={this.state.descriptionVal}\n              alert={this.state.descAlert}\n            />\n            <div>\n              {this.state.currentCards.length > 0 && List}\n              <Row className=\"justify-content-center\">\n                <Col md={5} xs={10} lg={5} xl={5}>\n                  <button\n                    id=\"addCard\"\n                    onClick={() => {\n                      this.addCard();\n                    }}\n                  >\n                    Add a card\n                  </button>\n                </Col>\n              </Row>\n            </div>\n          </div>\n        </Container>\n      </>\n    );\n  }\n}\n","import React from \"react\";\nimport firebase from \"firebase\";\nimport { Card, Col, Row, Container } from \"react-bootstrap\";\nimport Top from \"./Top\";\nimport { Helmet } from \"react-helmet\";\n\nconst db = firebase.firestore();\n\nexport default class CardsetAnswer extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      currentCards: [],\n      entryId: this.props.match.params.urlString,\n      shuffled: [],\n      index: 0,\n      currentSide: \"A\",\n      cardsAnswered: 0,\n      category: \"\",\n      cardsCorrect: 0,\n      title: \"\",\n      isSignedIn: false,\n      complete: false,\n      disabled: true,\n      flips: 0,\n    };\n    this.endButton = React.createRef();\n  }\n\n  componentDidMount() {\n    this.unregisterAuthObserver = firebase.auth().onAuthStateChanged((user) => {\n      this.setState({ isSignedIn: !!user }, () => {\n        const uid = firebase.auth().currentUser.uid;\n        const holder =\n          this.props.location.pathname.indexOf(\"/set/yours/\") === -1\n            ? db.collection(\"defaultcards\")\n            : db.collection(\"users\").doc(uid).collection(\"yourCards\");\n\n        this.unsubscribe = holder\n          .doc(this.state.entryId)\n          .collection(\"cards\")\n          .orderBy(\"created\", \"asc\")\n          .onSnapshot((snapshot) => {\n            this.setState({\n              currentCards: snapshot.docs,\n              category: \"\",\n            });\n            this.shuffle(this.state.currentCards);\n          });\n        holder\n          .doc(this.state.entryId)\n          .get()\n          .then((doc) => {\n            if (doc.exists) {\n              this.setState({\n                category: doc.data().category,\n                title: doc.data().title,\n              });\n            } else {\n              this.props.history.push(`/flashcards/404`);\n            }\n          });\n      });\n    });\n  }\n\n  componentWillUnmount() {\n    if (this.unsubscribe) {\n      this.unsubscribe();\n    }\n  }\n\n  shuffle(cards) {\n    const shuffledCards = cards\n      .map((a) => ({ sort: Math.random(), value: a }))\n      .sort((a, b) => a.sort - b.sort)\n      .map((a) => a.value);\n    this.setState({\n      shuffled: shuffledCards,\n      index: 0,\n      currentSide: \"A\",\n      complete: false,\n      disabled: true,\n    });\n  }\n  flip() {\n    const currentSide = this.state.currentSide === \"B\" ? \"A\" : \"B\";\n    const flips = this.state.flips + 1;\n    this.setState({\n      currentSide: currentSide,\n      flips: flips,\n      disabled: false,\n    });\n  }\n\n  endStudy() {\n    if (this.state.currentSide === \"C\") {\n      this.props.history.push(`/flashcards/home`);\n    } else if (this.state.cardsAnswered !== 0) {\n      this.setState({\n        currentSide: \"C\",\n        disabled: true,\n      });\n    } else {\n      this.props.history.push(`/flashcards/home`);\n    }\n  }\n\n  nextCard(x) {\n    const i = this.state.index + 1;\n    const ans = this.state.cardsAnswered + 1;\n    const cardsCorrect = this.state.cardsCorrect + x;\n\n    this.setState(\n      {\n        index: i,\n        cardsAnswered: ans,\n        cardsCorrect: cardsCorrect,\n        flips: 0,\n        disabled: true,\n      },\n      () => {\n        if (i === this.state.currentCards.length) {\n          this.setState(\n            {\n              complete: true,\n              currentSide: \"C\",\n            },\n            this.endStudy()\n          );\n        } else {\n          this.setState({\n            currentSide: \"A\",\n            complete: false,\n          });\n        }\n      }\n    );\n  }\n\n  render() {\n    const card = this.state.shuffled[this.state.index];\n    const CardSide = () => {\n      if (card && this.state.currentSide !== \"C\") {\n        return (\n          <Row className={`justify-content-center cardHolder`}>\n            <Col className={`h-100`} md={10} xs={12} lg={10} xl={10}>\n              <Card\n                className={`sideA side ${this.state.category}`}\n                onClick={() => {\n                  this.flip();\n                }}\n              >\n                <span>{card.data().sideA}</span>\n              </Card>\n            </Col>\n            <Col className={`h-100`} md={10} xs={12} lg={10} xl={10}>\n              <Card\n                className={`sideB side ${this.state.category}`}\n                onClick={() => {\n                  this.flip();\n                }}\n              >\n                {\" \"}\n                <span>{card.data().sideB}</span>\n              </Card>\n            </Col>\n          </Row>\n        );\n      } else if (this.state.currentSide === \"C\") {\n        return (\n          <Col\n            className={`h-100 sideB ${this.state.category}`}\n            md={10}\n            xs={12}\n            lg={10}\n            xl={10}\n          >\n            <Card className=\"endCard\">\n              <span>\n                {`During this session, you got ${this.state.cardsCorrect} out of ${this.state.cardsAnswered} cards correct.`}\n                <br />\n                {`\n            That's ${parseFloat(\n              (this.state.cardsCorrect / this.state.cardsAnswered) * 100\n            ).toFixed(1)}%!`}{\" \"}\n              </span>\n            </Card>\n          </Col>\n        );\n      } else {\n        return <></>;\n      }\n    };\n    const flipped = () => {\n      if (this.state.flips > 0 && this.state.flips % 2 === 1) {\n        return \"flipped\";\n      } else if (this.state.flips > 0 && this.state.flips % 2 === 0) {\n        return \"unflipped\";\n      } else return \"\";\n    };\n\n    return (\n      <>\n        <Helmet>\n          <meta charSet=\"utf-8\" />\n          <title>{this.state.title} | BrainKwik</title>\n        </Helmet>\n        <Top title={this.state.title} action=\"cancel\" />\n        <Container fluid id=\"answer\">\n          <Row className=\"answerButtons justify-content-center topButtons\">\n            <Col md={6} xs={12} lg={6} xl={6}>\n              <button\n                onClick={() => {\n                  this.flip();\n                }}\n              >\n                Click to flip card\n              </button>\n            </Col>\n          </Row>\n          <Row className={`cardAnswer justify-content-center ${flipped()}`}>\n            <CardSide />\n          </Row>\n          <Row className=\"answerButtons justify-content-center result\">\n            <Col md={4} xs={6} lg={4} xl={4}>\n              <button\n                id=\"correct\"\n                disabled={this.state.disabled}\n                onClick={() => {\n                  this.nextCard(1);\n                }}\n              >\n                I got it right\n              </button>\n            </Col>\n            <Col md={4} xs={6} lg={4} xl={4}>\n              <button\n                id=\"incorrect\"\n                disabled={this.state.disabled}\n                onClick={() => {\n                  this.nextCard(0);\n                }}\n              >\n                I got it incorrect\n              </button>\n            </Col>\n          </Row>\n          <Row className=\"answerButtons  justify-content-center bottom\">\n            <Col md={6} xs={12} lg={6} xl={6}>\n              <button\n                id=\"reshuffle\"\n                onClick={() => {\n                  this.shuffle(this.state.currentCards);\n                }}\n              >\n                Start Over\n              </button>\n            </Col>{\" \"}\n            <Col md={6} xs={12} lg={6} xl={6}>\n              <button\n                id=\"end\"\n                ref={this.endButton}\n                onClick={() => {\n                  this.endStudy();\n                }}\n              >\n                End Session\n              </button>\n            </Col>\n          </Row>\n        </Container>\n      </>\n    );\n  }\n}\n","import React from \"react\";\nimport { Col, Row } from \"react-bootstrap\";\n\nexport default class Category extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n\n  render() {\n    return (\n      <Row className=\"justify-content-center\">\n        <Col xs={10} className=\"selectDiv\">\n          <select\n            defaultValue={this.props.category}\n            onChange={this.props.dropdownChanged}\n            disabled={this.props.disabled}\n          >\n            <option value=\"\" disabled>\n              Categorize your set\n            </option>\n            <option value=\"geography\">Geography</option>\n            <option value=\"history\">History</option>\n            <option value=\"pop-culture\">Pop Culture</option>\n            <option value=\"science\">Science</option>\n            <option value=\"sports\">Sports</option>\n            <option value=\"other\">Other</option>\n          </select>\n        </Col>\n      </Row>\n    );\n  }\n}\n","import React from \"react\";\nimport firebase from \"firebase\";\nimport Top from \"./Top\";\nimport Category from \"./Category\";\nimport Title from \"./Title\";\nimport Description from \"./Description\";\nimport { Container } from \"react-bootstrap\";\nimport { Helmet } from \"react-helmet\";\n\nconst db = firebase.firestore();\n\nexport default class NewCardSet extends React.Component {\n  constructor(props) {\n    super(props);\n    this.descRef = React.createRef();\n    this.state = {\n      title: null,\n      descriptionVal: null,\n      card: null,\n      entryId: null,\n      alert: null,\n      descAlert: null,\n      category: \"\",\n    };\n  }\n\n  updateTitle(n) {\n    const name = n;\n    if (name.length < 4) {\n      this.setState({\n        alert: \"Title must be at least four characters long\",\n      });\n    } else {\n      const entryId = name\n        .replace(/\\W+/g, \" \")\n        .replace(/\\s+/g, \"-\")\n        .toLowerCase();\n      this.setState({\n        title: name,\n        alert: null,\n        entryId: entryId,\n      });\n    }\n  }\n\n  updateDesc(n) {\n    const name = n;\n    if (name.length < 5) {\n      this.setState({\n        descAlert: \"Please write a longer description\",\n      });\n    } else {\n      this.setState({\n        descriptionVal: name,\n        descAlert: null,\n      });\n\n      let entryString = this.state.entryId;\n      let iterate = 0;\n      this.checkExists(entryString, iterate);\n    }\n  }\n\n  checkExists(entryString, i) {\n    db.collection(\"defaultcards\")\n      .doc(entryString)\n      .get()\n      .then((doc) => {\n        if (!doc.exists) {\n          this.setState({\n            entryId: entryString,\n          });\n          setTimeout(this.createSet(), 1000);\n        } else {\n          i++;\n\n          const string = this.state.entryId + \"-\" + i;\n          this.checkExists(string, i);\n        }\n      });\n  }\n\n  dropdownChanged = (e) => {\n    this.setState({\n      category: e.target.value,\n    });\n  };\n\n  createSet() {\n    const uid = firebase.auth().currentUser.uid;\n\n    db.collection(\"users\")\n      .doc(uid)\n      .collection(\"yourCards\")\n      .doc(this.state.entryId)\n      .set({\n        category: this.state.category,\n        title: this.state.title,\n        description: this.state.descriptionVal,\n      });\n    db.collection(\"users\")\n      .doc(uid)\n      .collection(\"yourCards\")\n      .doc(this.state.entryId)\n      .collection(\"cards\")\n      .add({\n        sideA: null,\n        sideB: null,\n        answered: 0,\n        correct: 0,\n        created: new Date(),\n      });\n\n    this.props.history.push({\n      pathname: `/set/yours/${this.state.entryId}/edit`,\n      state: {\n        title: this.state.title,\n        description: this.state.descriptionVal,\n        category: this.state.category,\n        entryId: this.state.entryId,\n      },\n    });\n  }\n  render() {\n    return (\n      <>\n        <Helmet>\n          <meta charSet=\"utf-8\" />\n          <title>Create a card set BrainKwik</title>\n        </Helmet>\n        <Top title={\"BrainKwik\"} action={\"cancel\"} />\n        <Container fluid className={this.state.category}>\n          <div className=\"content\">\n            <h1>Here's your chance to create a new study set.</h1>\n            <Category\n              dropdownChanged={this.dropdownChanged}\n              category={this.state.category}\n              disabled={false}\n            />\n            {this.state.category !== \"\" && (\n              <Title\n                updateTitle={this.updateTitle.bind(this)}\n                title={this.state.title}\n                alert={this.state.alert}\n                buttonText={\"Save title\"}\n              />\n            )}\n            {this.state.title !== null && (\n              <Description\n                updateDesc={this.updateDesc.bind(this)}\n                title={this.state.descriptionVal}\n                alert={this.state.descAlert}\n              />\n            )}\n          </div>\n        </Container>\n      </>\n    );\n  }\n}\n","import React from \"react\";\nimport { BrowserRouter as Router, Route, Link } from \"react-router-dom\";\nimport { Col, Row, Container } from \"react-bootstrap\";\nimport Top from \"./Top\";\nimport { Helmet } from \"react-helmet\";\n\nexport default class CardsetAnswer extends React.Component {\n  render() {\n    return (\n      <>\n        {\" \"}\n        <Helmet>\n          <meta charSet=\"utf-8\" />\n          <title>404 | BrainKwik</title>\n        </Helmet>\n        <Top title={`BrainKwik`} action=\"cancel\" />\n        <Container fluid className=\"fourohfour\">\n          <Row className=\"justify-content-center\">\n            <Col md={6} xs={12} lg={6} xl={6}>\n              You have a 404 error.\n              <br />\n              <br />\n              <Link to={`/home`}>Go to our homepage</Link>\n            </Col>\n          </Row>\n        </Container>\n      </>\n    );\n  }\n}\n","import React from \"react\";\nimport { HashRouter as Router, Route, Switch } from \"react-router-dom\";\nimport Home from \"./Home\";\nimport SignIn from \"./SignIn\";\nimport CardsetEdit from \"./CardsetEdit\";\nimport CardsetAnswer from \"./CardsetAnswer\";\nimport NewCardSet from \"./NewCardSet\";\nimport NoMatch from \"./NoMatch\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\nclass App extends React.Component {\n  render() {\n    return (\n      <div>\n        <Router>\n          <Switch>\n            <Route exact path=\"/flashcards/home\" component={Home} />\n            <Route exact path=\"/flashcards/\" component={SignIn} />\n            <Route exact path=\"/flashcards/brainkwik\" component={SignIn} />\n            <Route\n              path=\"/flashcards/set/yours/:urlString/edit\"\n              component={CardsetEdit}\n            />\n            <Route\n              path=\"/flashcards/set/yours/:urlString/\"\n              component={CardsetAnswer}\n            />\n            <Route\n              path=\"/flashcards/set/:urlString/\"\n              component={CardsetAnswer}\n            />\n            <Route path=\"/flashcards/new\" component={NewCardSet} />\n            <Route component={NoMatch} />\n          </Switch>\n        </Router>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./setupFirebase\";\nimport \"./index.css\";\nimport \"./style.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}